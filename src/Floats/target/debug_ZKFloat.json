{"debug_symbols":[{"locations":{"0":[{"span":{"start":10304,"end":10321},"file":1},{"span":{"start":8295,"end":8324},"file":1}],"1":[{"span":{"start":10304,"end":10321},"file":1},{"span":{"start":8335,"end":8364},"file":1}],"2":[{"span":{"start":10304,"end":10321},"file":1},{"span":{"start":9388,"end":9417},"file":1}],"3":[{"span":{"start":10304,"end":10321},"file":1},{"span":{"start":9427,"end":9456},"file":1}],"0.5":[{"span":{"start":566,"end":587},"file":0}],"0.6":[{"span":{"start":566,"end":587},"file":0}],"0.7":[{"span":{"start":566,"end":587},"file":0}],"0.8":[{"span":{"start":566,"end":587},"file":0}],"0.9":[{"span":{"start":566,"end":587},"file":0}],"0.10":[{"span":{"start":566,"end":587},"file":0}],"0.11":[{"span":{"start":566,"end":587},"file":0}],"0.12":[{"span":{"start":566,"end":587},"file":0}],"0.13":[{"span":{"start":566,"end":587},"file":0}],"0.14":[{"span":{"start":566,"end":587},"file":0}],"0.15":[{"span":{"start":566,"end":587},"file":0}],"0.16":[{"span":{"start":566,"end":587},"file":0}],"0.17":[{"span":{"start":566,"end":587},"file":0}],"0.18":[{"span":{"start":566,"end":587},"file":0}],"0.19":[{"span":{"start":566,"end":587},"file":0}],"0.20":[{"span":{"start":566,"end":587},"file":0}],"0.21":[{"span":{"start":566,"end":587},"file":0}],"0.22":[{"span":{"start":566,"end":587},"file":0}],"0.23":[{"span":{"start":566,"end":587},"file":0}],"0.24":[{"span":{"start":566,"end":587},"file":0}],"0.25":[{"span":{"start":566,"end":587},"file":0}],"0.26":[{"span":{"start":566,"end":587},"file":0}],"0.27":[{"span":{"start":566,"end":587},"file":0}],"0.28":[{"span":{"start":566,"end":587},"file":0}],"0.29":[{"span":{"start":566,"end":587},"file":0}],"0.30":[{"span":{"start":566,"end":587},"file":0}],"0.31":[{"span":{"start":566,"end":587},"file":0}],"0.32":[{"span":{"start":566,"end":587},"file":0}],"0.33":[{"span":{"start":566,"end":587},"file":0}],"0.34":[{"span":{"start":566,"end":587},"file":0}],"0.35":[{"span":{"start":566,"end":587},"file":0}],"0.36":[{"span":{"start":566,"end":587},"file":0}],"0.37":[{"span":{"start":566,"end":587},"file":0}],"0.38":[{"span":{"start":566,"end":587},"file":0}],"0.39":[{"span":{"start":566,"end":587},"file":0}],"0.40":[{"span":{"start":566,"end":587},"file":0}],"0.41":[{"span":{"start":566,"end":587},"file":0}],"0.42":[{"span":{"start":566,"end":587},"file":0}],"0.43":[{"span":{"start":566,"end":587},"file":0}],"0.44":[{"span":{"start":566,"end":587},"file":0}],"0.45":[{"span":{"start":566,"end":587},"file":0}],"0.46":[{"span":{"start":566,"end":587},"file":0}],"0.47":[{"span":{"start":566,"end":587},"file":0}],"0.48":[{"span":{"start":566,"end":587},"file":0}],"0.49":[{"span":{"start":566,"end":587},"file":0}],"0.50":[{"span":{"start":566,"end":587},"file":0}],"0.51":[{"span":{"start":566,"end":587},"file":0}],"0.52":[{"span":{"start":566,"end":587},"file":0}],"0.53":[{"span":{"start":566,"end":587},"file":0}],"0.54":[{"span":{"start":566,"end":587},"file":0}],"0.55":[{"span":{"start":566,"end":587},"file":0}],"0.56":[{"span":{"start":566,"end":587},"file":0}],"0.57":[{"span":{"start":566,"end":587},"file":0}],"0.58":[{"span":{"start":566,"end":587},"file":0}],"0.59":[{"span":{"start":566,"end":587},"file":0}],"0.60":[{"span":{"start":566,"end":587},"file":0}],"0.61":[{"span":{"start":566,"end":587},"file":0}],"0.62":[{"span":{"start":566,"end":587},"file":0}],"0.63":[{"span":{"start":566,"end":587},"file":0}],"0.64":[{"span":{"start":566,"end":587},"file":0}],"0.65":[{"span":{"start":566,"end":587},"file":0}],"0.66":[{"span":{"start":566,"end":587},"file":0}],"0.67":[{"span":{"start":566,"end":587},"file":0}],"0.68":[{"span":{"start":566,"end":587},"file":0}],"0.69":[{"span":{"start":566,"end":587},"file":0}],"0.70":[{"span":{"start":566,"end":587},"file":0}],"0.71":[{"span":{"start":566,"end":587},"file":0}],"0.72":[{"span":{"start":566,"end":587},"file":0}],"0.73":[{"span":{"start":566,"end":587},"file":0}],"0.74":[{"span":{"start":566,"end":587},"file":0}],"0.75":[{"span":{"start":566,"end":587},"file":0}],"0.76":[{"span":{"start":566,"end":587},"file":0}],"0.77":[{"span":{"start":566,"end":587},"file":0}],"0.78":[{"span":{"start":566,"end":587},"file":0}],"0.79":[{"span":{"start":566,"end":587},"file":0}],"0.80":[{"span":{"start":566,"end":587},"file":0}],"0.81":[{"span":{"start":566,"end":587},"file":0}],"0.82":[{"span":{"start":566,"end":587},"file":0}],"0.83":[{"span":{"start":566,"end":587},"file":0}],"0.84":[{"span":{"start":566,"end":587},"file":0}],"0.85":[{"span":{"start":566,"end":587},"file":0}],"1.5":[{"span":{"start":566,"end":587},"file":0}],"1.6":[{"span":{"start":566,"end":587},"file":0}],"1.7":[{"span":{"start":566,"end":587},"file":0}],"1.8":[{"span":{"start":566,"end":587},"file":0}],"1.9":[{"span":{"start":566,"end":587},"file":0}],"1.10":[{"span":{"start":566,"end":587},"file":0}],"1.11":[{"span":{"start":566,"end":587},"file":0}],"1.12":[{"span":{"start":566,"end":587},"file":0}],"1.13":[{"span":{"start":566,"end":587},"file":0}],"1.14":[{"span":{"start":566,"end":587},"file":0}],"1.15":[{"span":{"start":566,"end":587},"file":0}],"1.16":[{"span":{"start":566,"end":587},"file":0}],"1.17":[{"span":{"start":566,"end":587},"file":0}],"1.18":[{"span":{"start":566,"end":587},"file":0}],"1.19":[{"span":{"start":566,"end":587},"file":0}],"1.20":[{"span":{"start":566,"end":587},"file":0}],"1.21":[{"span":{"start":566,"end":587},"file":0}],"1.22":[{"span":{"start":566,"end":587},"file":0}],"1.23":[{"span":{"start":566,"end":587},"file":0}],"1.24":[{"span":{"start":566,"end":587},"file":0}],"1.25":[{"span":{"start":566,"end":587},"file":0}],"1.26":[{"span":{"start":566,"end":587},"file":0}],"1.27":[{"span":{"start":566,"end":587},"file":0}],"1.28":[{"span":{"start":566,"end":587},"file":0}],"1.29":[{"span":{"start":566,"end":587},"file":0}],"1.30":[{"span":{"start":566,"end":587},"file":0}],"1.31":[{"span":{"start":566,"end":587},"file":0}],"1.32":[{"span":{"start":566,"end":587},"file":0}],"1.33":[{"span":{"start":566,"end":587},"file":0}],"1.34":[{"span":{"start":566,"end":587},"file":0}],"1.35":[{"span":{"start":566,"end":587},"file":0}],"1.36":[{"span":{"start":566,"end":587},"file":0}],"1.37":[{"span":{"start":566,"end":587},"file":0}],"1.38":[{"span":{"start":566,"end":587},"file":0}],"1.39":[{"span":{"start":566,"end":587},"file":0}],"1.40":[{"span":{"start":566,"end":587},"file":0}],"1.41":[{"span":{"start":566,"end":587},"file":0}],"1.42":[{"span":{"start":566,"end":587},"file":0}],"1.43":[{"span":{"start":566,"end":587},"file":0}],"1.44":[{"span":{"start":566,"end":587},"file":0}],"1.45":[{"span":{"start":566,"end":587},"file":0}],"1.46":[{"span":{"start":566,"end":587},"file":0}],"1.47":[{"span":{"start":566,"end":587},"file":0}],"1.48":[{"span":{"start":566,"end":587},"file":0}],"1.49":[{"span":{"start":566,"end":587},"file":0}],"1.50":[{"span":{"start":566,"end":587},"file":0}],"1.51":[{"span":{"start":566,"end":587},"file":0}],"1.52":[{"span":{"start":566,"end":587},"file":0}],"1.53":[{"span":{"start":566,"end":587},"file":0}],"1.54":[{"span":{"start":566,"end":587},"file":0}],"1.55":[{"span":{"start":566,"end":587},"file":0}],"1.56":[{"span":{"start":566,"end":587},"file":0}],"1.57":[{"span":{"start":566,"end":587},"file":0}],"1.58":[{"span":{"start":566,"end":587},"file":0}],"1.59":[{"span":{"start":566,"end":587},"file":0}],"1.60":[{"span":{"start":566,"end":587},"file":0}],"1.61":[{"span":{"start":566,"end":587},"file":0}],"1.62":[{"span":{"start":566,"end":587},"file":0}],"1.63":[{"span":{"start":566,"end":587},"file":0}],"1.64":[{"span":{"start":566,"end":587},"file":0}],"1.65":[{"span":{"start":566,"end":587},"file":0}],"1.66":[{"span":{"start":566,"end":587},"file":0}],"1.67":[{"span":{"start":566,"end":587},"file":0}],"1.68":[{"span":{"start":566,"end":587},"file":0}],"1.69":[{"span":{"start":566,"end":587},"file":0}],"1.70":[{"span":{"start":566,"end":587},"file":0}],"1.71":[{"span":{"start":566,"end":587},"file":0}],"1.72":[{"span":{"start":566,"end":587},"file":0}],"1.73":[{"span":{"start":566,"end":587},"file":0}],"1.74":[{"span":{"start":566,"end":587},"file":0}],"1.75":[{"span":{"start":566,"end":587},"file":0}],"1.76":[{"span":{"start":566,"end":587},"file":0}],"1.77":[{"span":{"start":566,"end":587},"file":0}],"1.78":[{"span":{"start":566,"end":587},"file":0}],"1.79":[{"span":{"start":566,"end":587},"file":0}],"1.80":[{"span":{"start":566,"end":587},"file":0}],"1.81":[{"span":{"start":566,"end":587},"file":0}],"1.82":[{"span":{"start":566,"end":587},"file":0}],"1.83":[{"span":{"start":566,"end":587},"file":0}],"1.84":[{"span":{"start":566,"end":587},"file":0}],"1.85":[{"span":{"start":566,"end":587},"file":0}],"2.5":[{"span":{"start":566,"end":587},"file":0}],"2.6":[{"span":{"start":566,"end":587},"file":0}],"2.7":[{"span":{"start":566,"end":587},"file":0}],"2.8":[{"span":{"start":566,"end":587},"file":0}],"2.9":[{"span":{"start":566,"end":587},"file":0}],"2.10":[{"span":{"start":566,"end":587},"file":0}],"2.11":[{"span":{"start":566,"end":587},"file":0}],"2.12":[{"span":{"start":566,"end":587},"file":0}],"2.13":[{"span":{"start":566,"end":587},"file":0}],"2.14":[{"span":{"start":566,"end":587},"file":0}],"2.15":[{"span":{"start":566,"end":587},"file":0}],"2.16":[{"span":{"start":566,"end":587},"file":0}],"2.17":[{"span":{"start":566,"end":587},"file":0}],"2.18":[{"span":{"start":566,"end":587},"file":0}],"2.19":[{"span":{"start":566,"end":587},"file":0}],"2.20":[{"span":{"start":566,"end":587},"file":0}],"2.21":[{"span":{"start":566,"end":587},"file":0}],"2.22":[{"span":{"start":566,"end":587},"file":0}],"2.23":[{"span":{"start":566,"end":587},"file":0}],"2.24":[{"span":{"start":566,"end":587},"file":0}],"2.25":[{"span":{"start":566,"end":587},"file":0}],"2.26":[{"span":{"start":566,"end":587},"file":0}],"2.27":[{"span":{"start":566,"end":587},"file":0}],"2.28":[{"span":{"start":566,"end":587},"file":0}],"2.29":[{"span":{"start":566,"end":587},"file":0}],"2.30":[{"span":{"start":566,"end":587},"file":0}],"2.31":[{"span":{"start":566,"end":587},"file":0}],"2.32":[{"span":{"start":566,"end":587},"file":0}],"2.33":[{"span":{"start":566,"end":587},"file":0}],"2.34":[{"span":{"start":566,"end":587},"file":0}],"2.35":[{"span":{"start":566,"end":587},"file":0}],"2.36":[{"span":{"start":566,"end":587},"file":0}],"2.37":[{"span":{"start":566,"end":587},"file":0}],"2.38":[{"span":{"start":566,"end":587},"file":0}],"2.39":[{"span":{"start":566,"end":587},"file":0}],"2.40":[{"span":{"start":566,"end":587},"file":0}],"2.41":[{"span":{"start":566,"end":587},"file":0}],"2.42":[{"span":{"start":566,"end":587},"file":0}],"2.43":[{"span":{"start":566,"end":587},"file":0}],"2.44":[{"span":{"start":566,"end":587},"file":0}],"2.45":[{"span":{"start":566,"end":587},"file":0}],"2.46":[{"span":{"start":566,"end":587},"file":0}],"2.47":[{"span":{"start":566,"end":587},"file":0}],"2.48":[{"span":{"start":566,"end":587},"file":0}],"2.49":[{"span":{"start":566,"end":587},"file":0}],"2.50":[{"span":{"start":566,"end":587},"file":0}],"2.51":[{"span":{"start":566,"end":587},"file":0}],"2.52":[{"span":{"start":566,"end":587},"file":0}],"2.53":[{"span":{"start":566,"end":587},"file":0}],"2.54":[{"span":{"start":566,"end":587},"file":0}],"2.55":[{"span":{"start":566,"end":587},"file":0}],"2.56":[{"span":{"start":566,"end":587},"file":0}],"2.57":[{"span":{"start":566,"end":587},"file":0}],"2.58":[{"span":{"start":566,"end":587},"file":0}],"2.59":[{"span":{"start":566,"end":587},"file":0}],"2.60":[{"span":{"start":566,"end":587},"file":0}],"2.61":[{"span":{"start":566,"end":587},"file":0}],"2.62":[{"span":{"start":566,"end":587},"file":0}],"2.63":[{"span":{"start":566,"end":587},"file":0}],"2.64":[{"span":{"start":566,"end":587},"file":0}],"2.65":[{"span":{"start":566,"end":587},"file":0}],"2.66":[{"span":{"start":566,"end":587},"file":0}],"2.67":[{"span":{"start":566,"end":587},"file":0}],"2.68":[{"span":{"start":566,"end":587},"file":0}],"2.69":[{"span":{"start":566,"end":587},"file":0}],"2.70":[{"span":{"start":566,"end":587},"file":0}],"2.71":[{"span":{"start":566,"end":587},"file":0}],"2.72":[{"span":{"start":566,"end":587},"file":0}],"2.73":[{"span":{"start":566,"end":587},"file":0}],"2.74":[{"span":{"start":566,"end":587},"file":0}],"2.75":[{"span":{"start":566,"end":587},"file":0}],"2.76":[{"span":{"start":566,"end":587},"file":0}],"2.77":[{"span":{"start":566,"end":587},"file":0}],"2.78":[{"span":{"start":566,"end":587},"file":0}],"2.79":[{"span":{"start":566,"end":587},"file":0}],"2.80":[{"span":{"start":566,"end":587},"file":0}],"2.81":[{"span":{"start":566,"end":587},"file":0}],"2.82":[{"span":{"start":566,"end":587},"file":0}],"2.83":[{"span":{"start":566,"end":587},"file":0}],"2.84":[{"span":{"start":566,"end":587},"file":0}],"2.85":[{"span":{"start":566,"end":587},"file":0}],"3.5":[{"span":{"start":566,"end":587},"file":0}],"3.6":[{"span":{"start":566,"end":587},"file":0}],"3.7":[{"span":{"start":566,"end":587},"file":0}],"3.8":[{"span":{"start":566,"end":587},"file":0}],"3.9":[{"span":{"start":566,"end":587},"file":0}],"3.10":[{"span":{"start":566,"end":587},"file":0}],"3.11":[{"span":{"start":566,"end":587},"file":0}],"3.12":[{"span":{"start":566,"end":587},"file":0}],"3.13":[{"span":{"start":566,"end":587},"file":0}],"3.14":[{"span":{"start":566,"end":587},"file":0}],"3.15":[{"span":{"start":566,"end":587},"file":0}],"3.16":[{"span":{"start":566,"end":587},"file":0}],"3.17":[{"span":{"start":566,"end":587},"file":0}],"3.18":[{"span":{"start":566,"end":587},"file":0}],"3.19":[{"span":{"start":566,"end":587},"file":0}],"3.20":[{"span":{"start":566,"end":587},"file":0}],"3.21":[{"span":{"start":566,"end":587},"file":0}],"3.22":[{"span":{"start":566,"end":587},"file":0}],"3.23":[{"span":{"start":566,"end":587},"file":0}],"3.24":[{"span":{"start":566,"end":587},"file":0}],"3.25":[{"span":{"start":566,"end":587},"file":0}],"3.26":[{"span":{"start":566,"end":587},"file":0}],"3.27":[{"span":{"start":566,"end":587},"file":0}],"3.28":[{"span":{"start":566,"end":587},"file":0}],"3.29":[{"span":{"start":566,"end":587},"file":0}],"3.30":[{"span":{"start":566,"end":587},"file":0}],"3.31":[{"span":{"start":566,"end":587},"file":0}],"3.32":[{"span":{"start":566,"end":587},"file":0}],"3.33":[{"span":{"start":566,"end":587},"file":0}],"3.34":[{"span":{"start":566,"end":587},"file":0}],"3.35":[{"span":{"start":566,"end":587},"file":0}],"3.36":[{"span":{"start":566,"end":587},"file":0}],"3.37":[{"span":{"start":566,"end":587},"file":0}],"3.38":[{"span":{"start":566,"end":587},"file":0}],"3.39":[{"span":{"start":566,"end":587},"file":0}],"3.40":[{"span":{"start":566,"end":587},"file":0}],"3.41":[{"span":{"start":566,"end":587},"file":0}],"3.42":[{"span":{"start":566,"end":587},"file":0}],"3.43":[{"span":{"start":566,"end":587},"file":0}],"3.44":[{"span":{"start":566,"end":587},"file":0}],"3.45":[{"span":{"start":566,"end":587},"file":0}],"3.46":[{"span":{"start":566,"end":587},"file":0}],"3.47":[{"span":{"start":566,"end":587},"file":0}],"3.48":[{"span":{"start":566,"end":587},"file":0}],"3.49":[{"span":{"start":566,"end":587},"file":0}],"3.50":[{"span":{"start":566,"end":587},"file":0}],"3.51":[{"span":{"start":566,"end":587},"file":0}],"3.52":[{"span":{"start":566,"end":587},"file":0}],"3.53":[{"span":{"start":566,"end":587},"file":0}],"3.54":[{"span":{"start":566,"end":587},"file":0}],"3.55":[{"span":{"start":566,"end":587},"file":0}],"3.56":[{"span":{"start":566,"end":587},"file":0}],"3.57":[{"span":{"start":566,"end":587},"file":0}],"3.58":[{"span":{"start":566,"end":587},"file":0}],"3.59":[{"span":{"start":566,"end":587},"file":0}],"3.60":[{"span":{"start":566,"end":587},"file":0}],"3.61":[{"span":{"start":566,"end":587},"file":0}],"3.62":[{"span":{"start":566,"end":587},"file":0}],"3.63":[{"span":{"start":566,"end":587},"file":0}],"3.64":[{"span":{"start":566,"end":587},"file":0}],"3.65":[{"span":{"start":566,"end":587},"file":0}],"3.66":[{"span":{"start":566,"end":587},"file":0}],"3.67":[{"span":{"start":566,"end":587},"file":0}],"3.68":[{"span":{"start":566,"end":587},"file":0}],"3.69":[{"span":{"start":566,"end":587},"file":0}],"3.70":[{"span":{"start":566,"end":587},"file":0}],"3.71":[{"span":{"start":566,"end":587},"file":0}],"3.72":[{"span":{"start":566,"end":587},"file":0}],"3.73":[{"span":{"start":566,"end":587},"file":0}],"3.74":[{"span":{"start":566,"end":587},"file":0}],"3.75":[{"span":{"start":566,"end":587},"file":0}],"3.76":[{"span":{"start":566,"end":587},"file":0}],"3.77":[{"span":{"start":566,"end":587},"file":0}],"3.78":[{"span":{"start":566,"end":587},"file":0}],"3.79":[{"span":{"start":566,"end":587},"file":0}],"3.80":[{"span":{"start":566,"end":587},"file":0}],"3.81":[{"span":{"start":566,"end":587},"file":0}],"3.82":[{"span":{"start":566,"end":587},"file":0}],"3.83":[{"span":{"start":566,"end":587},"file":0}],"3.84":[{"span":{"start":566,"end":587},"file":0}],"3.85":[{"span":{"start":566,"end":587},"file":0}]}}],"file_map":{"0":{"source":"mod hash;\nmod array;\nmod slice;\nmod merkle;\nmod schnorr;\nmod ecdsa_secp256k1;\nmod ecdsa_secp256r1;\nmod eddsa;\nmod grumpkin_scalar;\nmod grumpkin_scalar_mul;\nmod scalar_mul;\nmod sha256;\nmod sha512;\nmod field;\nmod ec;\nmod unsafe;\nmod collections;\nmod compat;\nmod option;\nmod string;\nmod test;\n\n// Oracle calls are required to be wrapped in an unconstrained function\n// Thus, the only argument to the `println` oracle is expected to always be an ident \n#[oracle(println)]\nunconstrained fn println_oracle<T>(_input: T) {}\n\nunconstrained pub fn println<T>(input: T) {\n    println_oracle(input);\n}\n\n#[foreign(recursive_aggregation)]\npub fn verify_proof<N>(_verification_key : [Field], _proof : [Field], _public_inputs : [Field], _key_hash : Field, _input_aggregation_object : [Field; N]) -> [Field; N] {}\n\n// Asserts that the given value is known at compile-time.\n// Useful for debugging for-loop bounds.\n#[builtin(assert_constant)]\npub fn assert_constant<T>(_x: T) {}\n\n// from_field and as_field are private since they are not valid for every type.\n// `as` should be the default for users to cast between primitive types, and in the future\n// traits can be used to work with generic types.\n#[builtin(from_field)]\nfn from_field<T>(_x : Field) -> T {}\n\n#[builtin(as_field)]\nfn as_field<T>(_x : T) -> Field {}\n\n\npub fn wrapping_add<T>(x : T, y: T) -> T {\n    crate::from_field(crate::as_field(x) + crate::as_field(y))\n}\n\npub fn wrapping_sub<T>(x : T, y: T) -> T {\n    //340282366920938463463374607431768211456 is 2^128, it is used to avoid underflow\n    crate::from_field(crate::as_field(x) + 340282366920938463463374607431768211456 - crate::as_field(y))\n}\n\npub fn wrapping_mul<T>(x : T, y: T) -> T {\n    crate::from_field(crate::as_field(x) * crate::as_field(y))\n}\n\n/// Shift-left x by y bits\n/// If the result overflow the bitsize; it does not fail and returns 0 instead\n#[builtin(wrapping_shift_left)]\npub fn wrapping_shift_left<T>(_x : T, _y: T) -> T {}\n","path":"std/lib.nr"},"1":{"source":"use dep::std;\n\n// Struct representing float numbers using sign, mantissa and exponent.\n// When Noir language gets the update to support signed integers, the sign field will be removed\nstruct Float {\n    sign: Field,\n    mantissa: Field,\n    exponent: Field,\n}\n\n// Float number precision of mantissa\nglobal precision : Field = 7;\n\n// ReLU activation function used for neural network ML models\nfn relu(x : Float) -> Float {\n    let mut res = x;\n    if x.sign as u64 == 1 {\n        res = Float { sign: 0, mantissa: 0, exponent: 100 };\n    } \n\n    res\n}\n\n// Truncate Float to \"precision\" number of digits, 5 in the example\nfn truncate(num: Float) -> Float {\n    let lookup : [Field; 25] = [\n        1,\n        10,\n        100,\n        1000,\n        10000,\n        100000,\n        1000000,\n        10000000,\n        100000000,\n        1000000000,\n        10000000000,\n        100000000000,\n        1000000000000,\n        10000000000000,\n        100000000000000,\n        1000000000000000,\n        10000000000000000,\n        100000000000000000,\n        1000000000000000000,\n        10000000000000000000,\n        100000000000000000000,\n        1000000000000000000000,\n        10000000000000000000000,\n        100000000000000000000000,\n        1000000000000000000000000,\n    ];\n\n    let maxValue : Field = 10.pow_32(precision);\n    let mut decValue : Field = 1;\n    let mut logValue : Field = 0;\n\n    for i in 0..25 {\n        if num.mantissa as u64 >= lookup[i] as u64 {\n            decValue = lookup[i];\n            logValue = i;\n        }  \n    }\n\n    decValue *= 10;\n    logValue += 1;\n\n    let mut res : Float = Float { sign: num.sign, mantissa: num.mantissa, exponent: num.exponent };\n\n    if logValue as u64 > precision as u64 {\n        let diff = (decValue / maxValue) as u64;\n        res = Float { sign: num.sign, mantissa: (num.mantissa as u64 / diff) as Field, exponent: num.exponent + (logValue - precision)};  // \n    }\n\n    if res.mantissa == 0 {\n        res = Float { sign: res.sign, mantissa: 0, exponent: 100 };\n    }\n\n    res\n}\n\n// Multiplication of Float numbers\nfn mulFloats(x: Float, y: Float) -> Float {\n    let mant = x.mantissa * y.mantissa;\n    let exp = x.exponent + y.exponent; // Sum of the exponents\n\n    let mut sign: Field = 0;\n    if x.sign != y.sign {\n        sign = 1;\n    }\n\n    truncate(Float { sign: sign, mantissa: mant, exponent: exp })\n}\n\n\n// Dividing of Float numbers\nfn divFloats(x: Float, y: Float) -> Float {\n    assert(y.mantissa as u64 != 0, \"Division by zero\");\n\n    let exp1 = x.exponent as u64;\n    let exp2 = y.exponent as u64;\n    let mut mant1 = x.mantissa as u64;\n    let mant2 = y.mantissa as u64;\n\n    // Adjust the mantissa of x to match the exponent of y\n    if exp1 > exp2 {\n        for _ in 0..(exp1 - exp2) {\n            mant1 *= 10;\n        }\n    }\n\n    // Perform division\n    let new_mant = mant1 / mant2;\n\n    // Adjust the exponent based on the original exponents\n    let new_exp = if exp1 >= exp2 {\n        100 + (exp1 - exp2)\n    } else {\n        100 - (exp2 - exp1)\n    };\n\n    // Handle sign\n    let sign: Field = if x.sign != y.sign { 1 } else { 0 };\n\n    // Convert back to Field type\n    let new_mant_field: Field = new_mant as Field;\n    let new_exp_field: Field = new_exp as Field;\n\n    // Truncate to maintain precision\n    truncate(Float { sign, mantissa: new_mant_field, exponent: new_exp_field })\n}\n\n\n\n\n\n\n\n\n\n// Sumation of Float numbers\nfn addFloats(x : Float, y : Float) -> Float {\n    let mut mant_1 = x.mantissa;\n    let mut mant_2 = y.mantissa;\n\n    let mut exp_1 = x.exponent;\n    let mut exp_2 = y.exponent;\n\n    let mut diff : Field = 0;\n    \n    if exp_1 as u64 > exp_2 as u64 { \n        diff = exp_1 - exp_2;\n    } else {\n        diff = exp_2 - exp_1;\n    }\n\n    let mut pow10 : Field = 10.pow_32(diff);\n\n    if x.exponent as u64 < y.exponent as u64 {\n      mant_2 *= pow10;\n      exp_1 = x.exponent;\n    } else {\n      mant_1 *= pow10;\n      exp_1 = y.exponent;\n    }\n\n    let mut sum_mant = mant_1 + mant_2;\n    let mut sign = x.sign;\n\n    if x.sign != y.sign {\n        if mant_1 as u64 > mant_2 as u64 {\n            sum_mant = mant_1 - mant_2;\n        } else {\n            sum_mant = mant_2 - mant_1;\n            sign = y.sign;\n        }\n    }\n    \n    truncate(Float { sign: sign, mantissa: sum_mant, exponent: exp_1 })\n}\n\n// Subtraction of float numbers\nfn subFloats(x : Float, y : Float) -> Float {\n    addFloats(x, Float { sign: 1 - y.sign, mantissa: y.mantissa, exponent: y.exponent })\n}\n\n\nfn test_add_floats() {\n    // Test 1: Basic Addition\n    {\n        let float1 = Float { sign: 0, mantissa: 10000, exponent: 100 };\n        let float2 = Float { sign: 0, mantissa: 20000, exponent: 100 };\n        let result = addFloats(float1, float2);\n        assert(result.mantissa as u64 == 30000, \"addFloats failed for test 1\");\n    }\n\n    // Test 2: Addition with Different Exponents\n    {\n        let float1 = Float { sign: 0, mantissa: 10000, exponent: 101 };\n        let float2 = Float { sign: 0, mantissa: 20000, exponent: 100 };\n        let result = addFloats(float1, float2);\n        assert(result.mantissa as u64 == 120000, \"addFloats failed for test 2\");\n    }\n\n    // Test 3: Addition with Negative Number\n    {\n        let float1 = Float { sign: 0, mantissa: 30000, exponent: 100 };\n        let float2 = Float { sign: 1, mantissa: 10000, exponent: 100 };\n        let result = addFloats(float1, float2);\n        assert(result.mantissa as u64 == 20000, \"addFloats failed for test 3\");\n    }\n\n    // Test 4: Adding Zero\n    {\n        let float1 = Float { sign: 0, mantissa: 10000, exponent: 100 };\n        let float2 = Float { sign: 0, mantissa: 0, exponent: 100 };\n        let result = addFloats(float1, float2);\n        assert(result.mantissa as u64 == 10000, \"addFloats failed for test 4\");\n    }\n}\n\nfn test_sub_floats() {\n    // Test 1: Basic Subtraction\n    {\n        let float1 = Float { sign: 0, mantissa: 30000, exponent: 100 };\n        let float2 = Float { sign: 0, mantissa: 10000, exponent: 100 };\n        let result = subFloats(float1, float2);\n        assert(result.mantissa as u64 == 20000, \"subFloats failed for test 1\");\n    }\n\n    // Test 2: Subtraction Resulting in Negative Number\n    {\n        let float1 = Float { sign: 0, mantissa: 10000, exponent: 100 };\n        let float2 = Float { sign: 0, mantissa: 30000, exponent: 100 };\n        let result = subFloats(float1, float2);\n        let mantissa_as_u64 = result.mantissa as u64;\n        let sign_as_u64 = result.sign as u64;\n        assert((sign_as_u64 == 1) & (mantissa_as_u64 == 20000), \"subFloats failed for test 2\");\n    }\n\n    // Test 3: Subtraction with Same Values\n    {\n        let float1 = Float { sign: 0, mantissa: 20000, exponent: 100 };\n        let float2 = Float { sign: 0, mantissa: 20000, exponent: 100 };\n        let result = subFloats(float1, float2);\n        assert(result.mantissa as u64 == 0, \"subFloats failed for test 3\");\n    }\n\n}\n\nfn test_mul_floats() {\n    // Test 1: Basic Multiplication\n    {\n        let float1 = Float { sign: 0, mantissa: 1000, exponent: 100 };\n        let float2 = Float { sign: 0, mantissa: 2000, exponent: 100 };\n        let result = mulFloats(float1, float2);\n\n        assert(result.mantissa as u64 == 2000000, \"mulFloats failed for test 1\");\n    }\n\n    // Test 3: Multiplication with Negative Number\n    {\n        let float1 = Float { sign: 0, mantissa: 3000, exponent: 100 };\n        let float2 = Float { sign: 1, mantissa: 2000, exponent: 100 };\n        let result = mulFloats(float1, float2);\n        assert(result.sign == 1, \"mulFloats failed for test 3\");\n    }\n\n    // Test 4: Multiplying by Zero\n    {\n        let float1 = Float { sign: 0, mantissa: 10000, exponent: 100 };\n        let float2 = Float { sign: 0, mantissa: 0, exponent: 100 };\n        let result = mulFloats(float1, float2);\n        let mantissa_as_u64 = result.mantissa as u64;\n        assert(mantissa_as_u64 == 0, \"mulFloats failed for test 4\");\n    }\n}\n\nfn test_div_floats() {\n    // Test 1: Basic Division\n    {\n        let float1 = Float { sign: 0, mantissa: 10000, exponent: 100 };\n        let float2 = Float { sign: 0, mantissa: 5000, exponent: 100 };\n        let result = divFloats(float1, float2);\n        let expected_mantissa: u64 = 2; // 10000 / 5000\n        let expected_exponent: u64 = 100;\n        std::println(result.mantissa); \n        std::println(result.exponent);\n\n\n        assert((result.mantissa as u64 == expected_mantissa) & (result.exponent as u64 == expected_exponent), \"divFloats failed for test 1\");\n    }\n\n    // Test 2: Division with Different Exponents\n    {\n        let float1 = Float { sign: 0, mantissa: 10000, exponent: 101 };\n        let float2 = Float { sign: 0, mantissa: 5000, exponent: 100 };\n        let result = divFloats(float1, float2);\n        let expected_mantissa: u64 = 20; // Adjusted for exponent difference\n        let expected_exponent: u64 = 101;\n        assert((result.mantissa as u64 == expected_mantissa) & (result.exponent as u64 == expected_exponent), \"divFloats failed for test 2\");\n    }\n\n    // Test 3: Division Resulting in Fraction\n    {\n        let float1 = Float { sign: 0, mantissa: 30000, exponent: 100 };\n        let float2 = Float { sign: 0, mantissa: 30000, exponent: 100 };\n        let result = divFloats(float1, float2);\n        let expected_mantissa: u64 = 3333333; // Approximation\n        let expected_exponent: u64 = 100;\n        std::println(result.exponent);\n        std::println(result.mantissa);\n\n        //assert((result.mantissa as u64 == expected_mantissa) & (result.exponent as u64 == expected_exponent), \"divFloats failed for test 3\");\n    }\n\n    // Test 4: Division with Negative Number\n    {\n        let float1 = Float { sign: 0, mantissa: 10000, exponent: 100 };\n        let float2 = Float { sign: 1, mantissa: 5000, exponent: 100 };\n        let result = divFloats(float1, float2);\n        let expected_mantissa: u64 = 2;\n        let expected_sign: Field = 1;\n        let expected_exponent: u64 = 100;\n        assert((result.mantissa as u64 == expected_mantissa) & (result.sign == expected_sign) & (result.exponent as u64 == expected_exponent), \"divFloats failed for test 4\");\n    }\n}\nfn main() {\n    // Tests for addFloats, subFloats, mulFloats, and divFloats\n    test_add_floats();\n    test_sub_floats();\n    test_mul_floats();\n    test_div_floats();\n}   ","path":"/home/meo/projects/ZKFloat/src/main.nr"}},"warnings":[]}